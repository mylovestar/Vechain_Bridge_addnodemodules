{"version":3,"file":"index.js","sources":["../src/controllers/AccountCtrl.ts","../src/controllers/ClientCtrl.ts","../src/controllers/ConfigCtrl.ts","../src/controllers/ConnectModalCtrl.ts","../src/utils/ExplorerApi.ts","../src/controllers/ExplorerCtrl.ts","../src/controllers/ModalToastCtrl.ts","../src/controllers/RouterCtrl.ts","../src/utils/CoreConstants.ts","../src/utils/CoreHelpers.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { Account } from '../../types/accountTypes'\n\n// -- initial state ------------------------------------------------ //\nexport const initialAccountlState = {\n  connected: false,\n  chainSupported: false,\n  address: '',\n  chainId: '',\n  connector: ''\n}\n\nconst state = proxy<Account>(initialAccountlState)\n\n// -- controller --------------------------------------------------- //\nexport const AccountCtrl = {\n  state,\n\n  subscribe(callback: (newState: Account) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setAccount(account: Omit<Account, 'connected'>) {\n    Object.assign(state, account)\n    state.connected = true\n  },\n\n  setAddress(address: Account['address']) {\n    state.address = address\n  },\n\n  setChain(chainId: Account['chainId'], chainSupported: Account['chainSupported']) {\n    state.chainId = chainId\n    state.chainSupported = chainSupported\n  },\n\n  resetAccount() {\n    Object.assign(state, initialAccountlState)\n  }\n}\n","import type { EthereumOptions, Web3ModalEthereum } from '@web3modal/ethereum'\nimport { proxy } from 'valtio/vanilla'\n\n// -- types -------------------------------------------------------- //\nexport interface State {\n  ethereum?: typeof Web3ModalEthereum\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<State>({\n  ethereum: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ClientCtrl = {\n  ethereum() {\n    if (!state.ethereum) throw new Error('Ethereum client was not provided')\n\n    return state.ethereum\n  },\n\n  async setEthereumClient(options: EthereumOptions) {\n    const { Web3ModalEthereum } = await import('@web3modal/ethereum')\n    state.ethereum = Web3ModalEthereum.createClient(options)\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigOptions } from '../../types/configTypes'\n\n// -- types -------------------------------------------------------- //\nexport interface State extends ConfigOptions {\n  configured: boolean\n}\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<State>({\n  configured: false,\n  projectId: '',\n  theme: isDarkMode() ? 'dark' : 'light',\n  accentColor: 'default'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: State) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigOptions) {\n    if (!config.projectId)\n      throw new Error(\n        'Web3Modal requires projectId that can be obtained at cloud.walletconnect.com'\n      )\n    Object.assign(state, config)\n    state.configured = true\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\n\n// -- types -------------------------------------------------------- //\nexport interface State {\n  open: boolean\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<State>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConnectModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: State) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openModal() {\n    state.open = true\n  },\n\n  closeModal() {\n    state.open = false\n  }\n}\n","import type { ListingResponse, PageParams } from '../../types/explorerTypes'\nimport { ConfigCtrl } from '../controllers/ConfigCtrl'\n\n// -- helpers ------------------------------------------------------ //\nexport function getExplorerApi() {\n  return {\n    url: 'https://explorer-api.walletconnect.com',\n    projectId: ConfigCtrl.state.projectId\n  }\n}\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(Object.entries(params).map(([k, v]) => [k, v.toString()]))\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nfunction formatUrl(params: PageParams) {\n  const { url, projectId } = getExplorerApi()\n\n  return `${url}/v3/wallets?projectId=${projectId}&${formatParams(params)}`\n}\n\n// -- utilities ---------------------------------------------------- //\nexport async function fetchWallets(params: PageParams): Promise<ListingResponse> {\n  const fetched = await fetch(formatUrl(params))\n\n  return fetched.json()\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { Listing, ListingResponse, PageParams } from '../../types/explorerTypes'\nimport { fetchWallets } from '../utils/ExplorerApi'\n\n// -- types -------------------------------------------------------- //\nexport interface State {\n  search: string\n  page: number\n  wallets: ListingResponse\n  previewWallets: Listing[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<State>({\n  search: '',\n  page: 1,\n  wallets: { listings: [], total: 0 },\n  previewWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  subscribe(callback: (newState: State) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async getPreviewWallets() {\n    const { listings } = await fetchWallets({ page: 1, entries: 10, version: 1 })\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { listings: listingsObj, total } = await fetchWallets(params)\n    const listings = Object.values(listingsObj)\n    state.wallets = {\n      listings: [...state.wallets.listings, ...listings],\n      total\n    }\n    const { page, search } = params\n    if (typeof page !== 'undefined' && state.page !== page) state.page = page\n    if (typeof search !== 'undefined' && state.search !== search) state.search = search\n\n    return { listings, total }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\n\n// -- types -------------------------------------------------------- //\nexport interface State {\n  open: boolean\n  message: string\n  variant: 'error' | 'success'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<State>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: State) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: State['message'], variant: State['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterView } from '../../types/routerTypes'\n\n// -- types -------------------------------------------------------- //\nexport interface State {\n  history: RouterView[]\n  view: RouterView\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<State>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet'\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: State) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: State['view']) {\n    state.view = view\n    state.history.push(view)\n  },\n\n  replace(view: State['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","export const WALLETCONNECT_DEEPLINK_CHOICE = 'WALLETCONNECT_DEEPLINK_CHOICE'\n","import { WALLETCONNECT_DEEPLINK_CHOICE } from './CoreConstants'\n\nexport const CoreHelpers = {\n  isCoinbaseExtension() {\n    return window.coinbaseWalletExtension\n  },\n\n  isMobile() {\n    return Boolean(\n      window.matchMedia('(pointer:coarse)').matches ||\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n    )\n  },\n\n  formatNativeUrl(appUrl: string, encodedWcUrl: string, name: string) {\n    const plainAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n\n    return `${plainAppUrl}://wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, encodedWcUrl: string, name: string) {\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) plainAppUrl = appUrl.slice(0, -1)\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(WALLETCONNECT_DEEPLINK_CHOICE)\n  }\n}\n"],"names":["initialAccountlState","state","proxy","AccountCtrl","callback","valtioSub","account","address","chainId","chainSupported","ClientCtrl","options","Web3ModalEthereum","isDarkMode","ConfigCtrl","config","ConnectModalCtrl","getExplorerApi","formatParams","params","stringParams","k","v","formatUrl","url","projectId","fetchWallets","ExplorerCtrl","listings","listingsObj","total","page","search","ModalToastCtrl","message","variant","RouterCtrl","view","last","WALLETCONNECT_DEEPLINK_CHOICE","CoreHelpers","appUrl","encodedWcUrl","name","plainAppUrl","miliseconds","resolve","href","target"],"mappings":"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"}