import{proxy as i,subscribe as l}from"valtio/vanilla";const f={connected:!1,chainSupported:!1,address:"",chainId:"",connector:""},a=i(f),j={state:a,subscribe(e){return l(a,()=>e(a))},setAccount(e){Object.assign(a,e),a.connected=!0},setAddress(e){a.address=e},setChain(e,t){a.chainId=e,a.chainSupported=t},resetAccount(){Object.assign(a,f)}},w=i({ethereum:void 0}),I={ethereum(){if(!w.ethereum)throw new Error("Ethereum client was not provided");return w.ethereum},async setEthereumClient(e){const{Web3ModalEthereum:t}=await import("@web3modal/ethereum");w.ethereum=t.createClient(e)}};function C(){return typeof matchMedia<"u"&&matchMedia("(prefers-color-scheme: dark)").matches}const u=i({configured:!1,projectId:"",theme:C()?"dark":"light",accentColor:"default"}),b={state:u,subscribe(e){return l(u,()=>e(u))},setConfig(e){if(!e.projectId)throw new Error("Web3Modal requires projectId that can be obtained at cloud.walletconnect.com");Object.assign(u,e),u.configured=!0}},p=i({open:!1}),O={state:p,subscribe(e){return l(p,()=>e(p))},openModal(){p.open=!0},closeModal(){p.open=!1}};function v(){return{url:"https://explorer-api.walletconnect.com",projectId:b.state.projectId}}function E(e){const t=Object.fromEntries(Object.entries(e).map(([o,n])=>[o,n.toString()]));return new URLSearchParams(t).toString()}function W(e){const{url:t,projectId:o}=v();return`${t}/v3/wallets?projectId=${o}&${E(e)}`}async function g(e){return(await fetch(W(e))).json()}const r=i({search:"",page:1,wallets:{listings:[],total:0},previewWallets:[]}),$={state:r,subscribe(e){return l(r,()=>e(r))},async getPreviewWallets(){const{listings:e}=await g({page:1,entries:10,version:1});return r.previewWallets=Object.values(e),r.previewWallets},async getPaginatedWallets(e){const{listings:t,total:o}=await g(e),n=Object.values(t);r.wallets={listings:[...r.wallets.listings,...n],total:o};const{page:d,search:h}=e;return typeof d<"u"&&r.page!==d&&(r.page=d),typeof h<"u"&&r.search!==h&&(r.search=h),{listings:n,total:o}}},c=i({open:!1,message:"",variant:"success"}),A={state:c,subscribe(e){return l(c,()=>e(c))},openToast(e,t){c.open=!0,c.message=e,c.variant=t},closeToast(){c.open=!1}},s=i({history:["ConnectWallet"],view:"ConnectWallet"}),L={state:s,subscribe(e){return l(s,()=>e(s))},push(e){s.view=e,s.history.push(e)},replace(e){s.view=e,s.history=[e]},goBack(){if(s.history.length>1){s.history.pop();const[e]=s.history.slice(-1);s.view=e}}},m="WALLETCONNECT_DEEPLINK_CHOICE",M={isCoinbaseExtension(){return window.coinbaseWalletExtension},isMobile(){return Boolean(window.matchMedia("(pointer:coarse)").matches||/Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent))},formatNativeUrl(e,t,o){const n=e.replaceAll("/","").replaceAll(":","");return this.setWalletConnectDeepLink(n,o),`${n}://wc?uri=${t}`},formatUniversalUrl(e,t,o){let n=e;return e.endsWith("/")&&(n=e.slice(0,-1)),this.setWalletConnectDeepLink(n,o),`${n}/wc?uri=${t}`},async wait(e){return new Promise(t=>{setTimeout(t,e)})},openHref(e,t="_self"){window.open(e,t,"noreferrer noopener")},setWalletConnectDeepLink(e,t){localStorage.setItem(m,JSON.stringify({href:e,name:t}))},removeWalletConnectDeepLink(){localStorage.removeItem(m)}};export{j as AccountCtrl,I as ClientCtrl,b as ConfigCtrl,O as ConnectModalCtrl,M as CoreHelpers,$ as ExplorerCtrl,A as ModalToastCtrl,L as RouterCtrl,v as getExplorerApi,f as initialAccountlState};
//# sourceMappingURL=index.js.map
